[project]
name = "inventory_management_exercise"
version = "0.2.0"
description = "A FastAPI and React programming exercise"
authors = [
    { name = "Levi Junkert", email = "ljunkert@lila.ai" }
]
dependencies = [
    "fastapi>=0.109.0",
    "uvicorn>=0.27.0",
    "pydantic>=2.5.3",
    "pydantic-settings>=2.1.0",
    "scalar-fastapi>=1.0.3",
    "alembic>=1.13.1",
    "sqlmodel>=0.0.24",
]
requires-python = ">=3.12"
readme = "README.md"

[tool.uv]
keyring-provider = "subprocess"

[dependency-groups]
dev = [
    "diff-cover>=9.2.0",
    "pytest>=7.4.4",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.3",
    "httpx>=0.26.0",
    "ruff>=0.1.14",
    "pyright>=1.1.350",
    "pre-commit>=3.6.0",
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.5.3",
    "mkdocstrings>=0.24.0",
    "mkdocstrings-python>=1.7.5",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/inventory_management_exercise"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = ["E203", "E266"]

[tool.ruff.lint.isort]
known-first-party = ["inventory_management_exercise"]

[tool.pyright]
include = ["src", "tests"]
exclude = ["**/__pycache__", "dist", "build"]
typeCheckingMode = "basic"
useLibraryCodeForTypes = true
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.12"
venvPath = "."
venv = ".venv"

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

ignore_errors = true
omit = ["tests/*"]
show_missing = true


[tool.pytest.ini_options]
filterwarnings = [
    "error",
]

[tool.semantic_release]
version_toml = [
    "pyproject.toml:project.version",
]
